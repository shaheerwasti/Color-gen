{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,EA3BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAGlDC,GADMZ,EAAQ,WAAR,cAAYK,IACZA,EAAIQ,KAAK,MAEfC,EAAQ,WAAON,GASrB,OAPAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KAER,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IACG,6BAASS,QAAS,WACvBR,GAAS,GACTS,UAAUC,UAAUC,UAAUR,IAG9BS,UAAS,gBAAWhB,EAAQ,KAAO,eACnCiB,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAT,OACxB,uBAAGW,UAAU,iBAAiBjB,EAA9B,KACA,uBAAGiB,UAAU,eAAeT,GAC3BJ,GAAS,uBAAGa,UAAU,SAAb,yB,gBCoBCG,MAzCf,WAAgB,IAAD,EAEajB,mBAAS,IAFtB,mBAENkB,EAFM,KAECC,EAFD,OAGanB,oBAAS,GAHtB,mBAGNoB,EAHM,KAGCC,EAHD,OAIWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,IAJ9C,mBAINC,EAJM,KAIAC,EAJA,KAqBb,OACE,oCACE,6BAASX,UAAU,aACjB,+CACA,0BAAMY,SAnBS,SAACC,GACpBA,EAAEC,iBAGF,IACE,IAAMC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,GACrCE,EAAQI,GACRR,GAAS,GAET,MAAOD,GACPC,GAAS,MAUL,2BAAOS,KAAK,OAAOC,MAAOb,EAAOc,SAAU,SAACL,GAAD,OAAOR,EAASQ,EAAEM,OAAOF,QAAQG,YAAY,UACtFpB,UAAS,UAAKM,EAAQ,QAAU,QAClC,4BAAQN,UAAU,MAAMgB,KAAK,UAA7B,YAGJ,6BAAShB,UAAU,UAChBU,EAAKW,KAAI,SAACjB,EAAOpB,GACJoB,EAAM9B,IAClB,OAAO,kBAAC,EAAD,eAAagD,IAAKtC,GAAWoB,EAA7B,CAAoCpB,MAAOA,EAAOC,SAAUmB,EAAM9B,aClCnFiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2e6815ae.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(false)\n  const hex = rgbToHex(...rgb)\n  const bcg = rgb.join(',');\n\n  const hexValue = `#${hexColor}`\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n\n    }, 3000)\n    return () => clearTimeout(timeout);\n  }, [alert])\n  return <article onClick={() => {\n    setAlert(true);\n    navigator.clipboard.writeText(hexValue);\n\n  }}\n    className={`color ${index > 100 && 'color-light'}`}\n    style={{ backgroundColor: `rgb(${bcg})` }} >\n    <p className='percent-value'>{weight}%</p>\n    <p className='color-value'>{hexValue}</p>\n    {alert && <p className='alert'>copied to clipboard</p>}\n  </article >\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n\n  const [color, setColor] = useState('');\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#f16050').all(1));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n\n    try {\n      const colors = new Values(color).all(5);\n      setList(colors)\n      setError(false)\n\n    } catch (error) {\n      setError(true);\n      //console.log(error)\n    }\n\n  }\n  return (\n    <>\n      <section className='container'>\n        <h3>color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)} placeholder='#f15025'\n            className={`${error ? 'error' : null}`} />\n          <button className='btn' type='submit'>Submit</button>\n        </form>\n      </section>\n      <section className='colors'>\n        {list.map((color, index) => {\n          const hex = color.hex\n          return <SingleColor key={index} {...color} index={index} hexColor={color.hex}></SingleColor>\n        })}\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}